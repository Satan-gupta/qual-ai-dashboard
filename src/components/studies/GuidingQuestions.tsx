
import React, { useState } from 'react';
import { Plus, MoreHorizontal, Image, Eye } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';

interface Question {
  id: number;
  title: string;
  content: string;
  followUpType: string;
  image?: string;
}

const GuidingQuestions = () => {
  const [questions, setQuestions] = useState<Question[]>([
    {
      id: 1,
      title: "What were your initial impressions of the packaging and presentation?",
      content: "Gauge the user's first emotional and cognitive reactions upon receiving the TechFusion SmartWatch 2.0. This includes evaluating the visual appeal, perceived quality, and overall excitement generated by the packaging.",
      followUpType: "Surface scan (0-1 follow-ups)",
      image: "/lovable-uploads/2f07911a-86af-4ccd-a91d-84bf490a65c5.png"
    },
    {
      id: 2,
      title: "How did you experience getting the watch out of the box?",
      content: "This question aims to understand any challenges the user may face during the unboxing process, such as difficult-to-open seals, tightly packed components, or unclear instructions. Insights from this question help identify potential improvements to ensure the unboxing experience is smooth and enjoyable, enhancing overall customer satisfaction.",
      followUpType: "Surface scan (0-1 follow-ups)",
      image: "/lovable-uploads/2f07911a-86af-4ccd-a91d-84bf490a65c5.png"
    },
    {
      id: 3,
      title: "Would you recommend this product to your friends or family? Why or why not?",
      content: "Add context to help the AI ask the right follow-ups",
      followUpType: "AI decides"
    }
  ]);

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-2xl font-bold text-gray-900">Guiding questions</h2>
          <p className="text-gray-600">Write out your guiding questions that structure the interview and add context for each question to help the AI ask the right follow-ups</p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline">Save</Button>
          <Button className="bg-blue-500 hover:bg-blue-600">Continue â†’</Button>
        </div>
      </div>

      <div className="space-y-4">
        {questions.map((question, index) => (
          <Card key={question.id} className="border border-gray-200">
            <CardHeader className="pb-4">
              <div className="flex items-start justify-between">
                <div className="flex items-start gap-4">
                  <div className="w-8 h-8 bg-gray-100 rounded flex items-center justify-center font-medium text-gray-700">
                    {index + 1}
                  </div>
                  {question.image && (
                    <div className="w-16 h-16 rounded overflow-hidden bg-gray-100">
                      <img src={question.image} alt="Question context" className="w-full h-full object-cover" />
                    </div>
                  )}
                  <div className="flex-1">
                    <h3 className="font-medium text-gray-900 mb-2">Question {index + 1}</h3>
                    <Input 
                      value={question.title}
                      className="font-medium text-gray-900 border-none p-0 h-auto text-base"
                      readOnly
                    />
                  </div>
                  <div className="flex items-center gap-2">
                    <Badge variant="outline" className="text-xs">
                      {question.followUpType}
                    </Badge>
                    <Button variant="ghost" size="sm">
                      <MoreHorizontal className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Content</label>
                  <Textarea 
                    value={question.content}
                    className="w-full min-h-[80px]"
                    readOnly
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        ))}

        <Button variant="outline" className="w-full border-dashed border-gray-300 h-12 text-gray-600">
          <Plus className="h-4 w-4 mr-2" />
          Add Question
        </Button>
      </div>
    </div>
  );
};

export default GuidingQuestions;

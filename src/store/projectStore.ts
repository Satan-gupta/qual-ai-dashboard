
import { create } from 'zustand';

export interface MediaItem {
  type: 'image' | 'video' | 'webpage';
  url: string;
  name: string;
}

export interface Question {
  id: number;
  title: string;
  content: string;
  followUpType: string;
  media?: MediaItem[];
  type?: 'multiple-choice' | 'open-ended' | 'rating-scale' | 'voice-response';
  options?: string[];
  responseTypes?: string[];
  required?: boolean;
  scale?: string;
}

export interface ProjectData {
  name: string;
  description: string;
  duration: string;
  askEmail: boolean;
  languages: string[];
  welcomeImage?: string;
  questions: Question[];
}

interface ProjectStore {
  projectData: ProjectData;
  updateProject: (data: Partial<ProjectData>) => void;
  addQuestion: (question: Question) => void;
  updateQuestion: (id: number, updates: Partial<Question>) => void;
  removeQuestion: (id: number) => void;
  saveProject: () => void;
}

export const useProjectStore = create<ProjectStore>((set, get) => ({
  projectData: {
    name: 'Product feedback for new Smart Watch',
    description: '',
    duration: '20 minutes',
    askEmail: true,
    languages: ['English', 'Hindi', 'Bengali', 'Gujarati'],
    questions: [
      {
        id: 1,
        title: "What were your initial impressions of the packaging and presentation?",
        content: "Gauge the user's first emotional and cognitive reactions upon receiving the TechFusion SmartWatch 2.0. This includes evaluating the visual appeal, perceived quality, and overall excitement generated by the packaging.",
        followUpType: "Surface scan (0-1 follow-ups)",
        type: 'multiple-choice',
        options: ['Excellent', 'Good', 'Average', 'Poor', 'Very Poor'],
        required: true,
        media: [{type: 'image', url: "/lovable-uploads/2f07911a-86af-4ccd-a91d-84bf490a65c5.png", name: "packaging.png"}]
      },
      {
        id: 2,
        title: "How did you experience getting the watch out of the box?",
        content: "This question aims to understand any challenges the user may face during the unboxing process, such as difficult-to-open seals, tightly packed components, or unclear instructions.",
        followUpType: "Surface scan (0-1 follow-ups)",
        type: 'open-ended',
        required: true,
        responseTypes: ['text', 'voice', 'video'],
        media: [{type: 'image', url: "/lovable-uploads/2f07911a-86af-4ccd-a91d-84bf490a65c5.png", name: "unboxing.png"}]
      },
      {
        id: 3,
        title: "Rate the importance of battery life (1-10)",
        content: "Understanding user priorities for smartwatch features",
        followUpType: "AI decides",
        type: 'rating-scale',
        scale: '1-10',
        required: true
      }
    ]
  },

  updateProject: (data) => set((state) => ({
    projectData: { ...state.projectData, ...data }
  })),

  addQuestion: (question) => set((state) => ({
    projectData: {
      ...state.projectData,
      questions: [...state.projectData.questions, question]
    }
  })),

  updateQuestion: (id, updates) => set((state) => ({
    projectData: {
      ...state.projectData,
      questions: state.projectData.questions.map(q => 
        q.id === id ? { ...q, ...updates } : q
      )
    }
  })),

  removeQuestion: (id) => set((state) => ({
    projectData: {
      ...state.projectData,
      questions: state.projectData.questions.filter(q => q.id !== id)
    }
  })),

  saveProject: () => {
    const { projectData } = get();
    console.log('Saving project:', projectData);
    
    // Store in localStorage for demo purposes
    localStorage.setItem('currentProject', JSON.stringify(projectData));
    
    // Show success message
    // In a real app, this would make an API call
  }
}));
